/*
 * Copyright (c) 2012  Timo Savola
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 */

#ifndef CONCRETE_OBJECTS_EXTENDED_DATA_HPP
#define CONCRETE_OBJECTS_EXTENDED_DATA_HPP

#include "extended.hpp"

#include <cstdint>

#include <concrete/objects/object-data.hpp>
#include <concrete/portable.hpp>

namespace concrete {

struct ExtendedObject::Data: Object::Data {
	friend class ExtendedObject;

	Data(const TypeObject &type, uint32_t extension_size):
		Object::Data(type), m_extension_size(extension_size) {}

	template <typename ExtensionType>
	size_t extension_size() const throw ()
		{ return *m_extension_size / sizeof (ExtensionType); }

	template <typename DataType, typename ExtensionType>
	ExtensionType *extension_data() throw ()
		{ return reinterpret_cast<ExtensionType *> (reinterpret_cast<char *> (this) + sizeof (DataType)); }

	template <typename DataType, typename ExtensionType>
	const ExtensionType *extension_data() const throw ()
		{ return reinterpret_cast<const ExtensionType *> (reinterpret_cast<const char *> (this) + sizeof (DataType)); }

private:
	const Portable<uint32_t> m_extension_size;
} CONCRETE_PACKED;

} // namespace

#endif
