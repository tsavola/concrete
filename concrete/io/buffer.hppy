/*
 * Copyright (c) 2011  Timo Savola
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 */

#ifndef CONCRETE_IO_BUFFER_HPP
#define CONCRETE_IO_BUFFER_HPP

#include <cstddef>

#include <concrete/resource.hpp>

namespace concrete {

class Buffer: public Resource {
public:
	template <typename... Args> static Buffer *New(Args... args) { return new Buffer(args...); }

	Buffer();
	explicit Buffer(size_t size);
	virtual ~Buffer() throw ();

	void reset();
	void reset(size_t size);

	size_t production_space() const throw ();
	char *production_ptr() const throw ();
	void produced_length(size_t length) throw ();

	void produce(const void *data, size_t size) throw ();

	size_t consumable_size() const throw ();
	const char *consumable_data() const throw ();
	void consumed_length(size_t length) throw ();

	void drain() throw () { consumed_length(consumable_size()); }

	void shift() throw ();

private:
	char           *m_data;
	size_t          m_size;
	mutable size_t  m_produce_offset;
	mutable size_t  m_consume_offset;
};

} // namespace

#endif
